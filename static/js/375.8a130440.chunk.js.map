{"version":3,"file":"static/js/375.8a130440.chunk.js","mappings":"oMACA,GAAiB,E,SCOjB,EAPyB,SAAHA,GAAaA,EAAPC,QAC1B,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAAA,iBAAqBF,SAAC,mEAG3C,ECPaG,EACX,mECgBF,EAbqB,SAAHP,GAAsB,IAAhBQ,EAAQR,EAARQ,SAGtB,OAFAC,QAAQC,IAAI,kBAAmBF,IAG7BN,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SACGI,EAASG,KAAI,SAAAV,GAAO,OACnBC,EAAAA,EAAAA,KAACU,EAAgB,CAACX,QAASA,GCSjB,WAGlB,IAHiC,IAAdY,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBG,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWR,IAC3CA,KACLI,GAAMK,EAAgC,GAAdJ,EAAML,IAEhC,OAAOI,CACT,CDhBmDM,GAAY,OAK/D,E,UEgBA,EA3BqB,WACnB,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArChB,EAAQkB,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAQC,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,OAiBlB,OAhBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,IAAML,EAAM,cACbM,MAAK,SAAAC,GACJ,GAAIA,EAASC,SAAU,CACrB,IAAMC,EAAOF,EAASG,MACtB9B,QAAQC,IAAI,SAAU4B,GACtBV,EAAYU,EACd,MACE7B,QAAQC,IAAI,oBAEhB,IACC8B,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAChB,GACJ,GAAG,CAACZ,KAGFa,EAAAA,EAAAA,MAAAvC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAACyC,EAAY,CAACnC,SAAUA,MAG9B,C","sources":["components/TeachersListItem/TeachersListItem.module.css","components/TeachersListItem/TeachersListItem.jsx","../node_modules/nanoid/url-alphabet/index.js","components/TeachersList/TeachersList.jsx","../node_modules/nanoid/index.browser.js","pages/TeachersPage/TeachersPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import css from './TeachersListItem.module.css';\nconst TeachersListItem = ({ teacher }) => {\n  return (\n    <>\n      <li className={css.teachersListItem}>тут учитель</li>\n    </>\n  );\n};\nexport default TeachersListItem;\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","// import css from './TeachersList.module.css';\nimport TeachersListItem from 'components/TeachersListItem/TeachersListItem';\nimport { nanoid } from 'nanoid';\n\nconst TeachersList = ({ teachers }) => {\n  console.log('teachers LIST: ', teachers);\n\n  return (\n    <>\n      <ul>\n        {teachers.map(teacher => (\n          <TeachersListItem teacher={teacher} key={nanoid()} />\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default TeachersList;\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","// import css from './TeachersPage.module.css';\nimport { getDatabase, ref, child, get } from 'firebase/database';\nimport TeachersList from 'components/TeachersList/TeachersList';\nimport { useEffect, useState } from 'react';\n\nconst TeachersPage = () => {\n  const [teachers, setTeachers] = useState([]);\n\n  const dbRef = ref(getDatabase());\n  useEffect(() => {\n    get(child(dbRef, `teachers/`))\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          const data = snapshot.val();\n          console.log('data: ', data);\n          setTeachers(data);\n        } else {\n          console.log('No data available');\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [dbRef]);\n\n  return (\n    <>\n      <h2>Our teachers</h2>\n      <TeachersList teachers={teachers} />\n    </>\n  );\n};\nexport default TeachersPage;\n"],"names":["_ref","teacher","_jsx","_Fragment","children","className","css","urlAlphabet","teachers","console","log","map","TeachersListItem","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","scopedUrlAlphabet","nanoid","_useState","useState","_useState2","_slicedToArray","setTeachers","dbRef","ref","getDatabase","useEffect","get","child","then","snapshot","exists","data","val","catch","error","_jsxs","TeachersList"],"sourceRoot":""}